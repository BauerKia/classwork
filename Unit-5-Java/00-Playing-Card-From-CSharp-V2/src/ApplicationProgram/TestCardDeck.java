package ApplicationProgram;

import PlayingCard.PlayingCard;
import CardDeck.CardDeck;

import java.util.*;

public class TestCardDeck {
//
    public static void main(String[] args) {

        System.out.println("Welcome to my Second Java program!");

        //Instantiate a CardDeck
        CardDeck aCardDeck = new CardDeck();

        //Display all the cardsin the deck
        aCardDeck.showDeck();

        System.out.println("\n ---- Removing Jokers ----");

        aCardDeck.removeJokers();
        aCardDeck.showDeck();

        PlayingCard aCard = aCardDeck.dealCard();
        aCard.showCard();

        aCardDeck.shuffleDeck();


        /*
        * Demostrate use of the Jave Set class
        A Set is a ArrayLiat that will not allow duplicates
        * 
        * Since a Set is a subclass of Colelctions class, like List
        *       the same methods that work with List, work with Set
         */

        System.out.println("\n ---- Demo of a ArrayList vs a Set ----");


        //Defining an ArrayList
        List<String> names = new ArrayList<>();
        names.add("Yoda");
        names.add("Frank");
        names.add("Lola");
        names.add("Jay");

        System.out.println("\n ---- Here's the ArrayList ----");

        //display the list of name
        for(String aName : names){
            System.out.println(aName);
        }

        // Add a duplicate name
        names.add("Frank");

        System.out.println("\n ---- Here's the ArrayList after adding duplicate name----");
        System.out.println("\n ---- Duplicate name was WAS stored----");


        //display the list of name
        for(String aName : names){
            System.out.println(aName);
        }



        //Defining a Set class object as a HashSet
        //  HashSet - stores the entries in an unknown sequence (by hashCode)
        //          This is why we need the hashcode method
        //          hashCode is a unique representing the data in the object
        //          hashCode is generated by the hashCode() method for the class
        //
        //  TreeSet - stores entries in a sort sequence (based on the type)
        //          -> lowercase characters encode to a higher number then their uppercase counterparts
        //          -> encoding

               // UTF- 8 -> Ascii
        //  LinkedHashSet - Stores the entries in entry sequence (just like ArrayList) but still not duplicates

        Set<String> nameSet = new LinkedHashSet<>(); // Store element in entry sequence
        //Set<String> nameSet = new HashSet<>(); // Store element in hashCode (unknown to you)
       // Set<String> nameSet = new TreeSet<>();// Store element in sort sequence based on type
        nameSet.add("Yoda");
        nameSet.add("Frank");
        nameSet.add("Lola");
        nameSet.add("Jay");

        System.out.println("\n ---- Here's the Set ----");

        //display the list of name
        for(String aName : nameSet){
            System.out.println(aName);
        }

        // Add a duplicate name
        nameSet.add("Frank");

        System.out.println("\n ---- Here's the Set after adding duplicate name----");
        System.out.println("\n ---- Duplicate name was NOT stored----");


        //display the list of name
        for(String aName : nameSet){
            System.out.println(aName);
        }






    } // End of main() method
} // End of TestPlayingCard CLass